apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "cc.ifnot.app"
        minSdkVersion 27
        targetSdkVersion 29
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        archivesBaseName = "app_${version_name}"

        externalNativeBuild {
            cmake {
//                targets footest
                arguments "-DVERSION=${version_name}", "-DGRADLE_USER_HOME=${project.gradle.gradleUserHomeDir}"
            }
        }
    }

    buildTypes {
        release {
            buildConfigField "String", "VERSION", "${version_name}"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            buildConfigField "String", "VERSION", "\"${version_name}\""
            minifyEnabled false
        }
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    //noinspection GradleDynamicVersion
    implementation "androidx.core:core-ktx:+"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    //noinspection GradleDynamicVersion
    implementation "io.reactivex.rxjava3:rxjava:3.+"
    //noinspection GradleDynamicVersion
    implementation 'io.reactivex.rxjava3:rxandroid:3.+'

    // for lint use, we need implementation aar libs instead
//    implementation project(':utils:utils_lint')
//    implementation(':utils:utils_lint:aar')
    implementation(name: "lint-${flavor}", ext: 'aar')
//    implementation(name: "lint_${version_name}-${flavor}", ext: 'aar')
    // aar would not include the dep
    implementation project(':utils')

}
repositories {
    mavenCentral()
    flatDir {
        dirs '../utils/utils_lint/aar/build/outputs/aar'
    }
}
